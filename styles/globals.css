@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes fadeInUpwards {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .fadeInUpwards {
    animation-name: fadeInUpwards;
    animation-duration: 0.8s;
    animation-fill-mode: both;
  }

  @keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
  }

  .fadeIn {
      animation-name: fadeIn;
      animation-duration: 1s;
      animation-fill-mode: both;
  }

 /* Small screens: Default to vertical split */
.split-bg-vertically {
  background-image: linear-gradient(to bottom, #E6F0F8 20%, #E6F0F8 20%, #ffffff 20%, #ffffff 70%);
}

/* Larger screens */
@media (min-width: 640px) { /* Adjust breakpoint as needed */
  .bgForAbout {
    background-image: linear-gradient(to right, #E6F0F8 40%, #E6F0F8 40%, #ffffff 40%, #ffffff 70%);
  }

  .split-bg-vertically {
    background-image: none; /* Reset for larger screens if necessary */
  }
}

/* Carousel styles */
.carousel-container .swiper-pagination-bullet {
  background: #446AF2  !important; /* Example: Black bullets */
  opacity: 1 !important; /* Ensure the bullets are always visible */
  width: 15px;
  height: 15px;
  z-index: 10 !important
}

.carousel-container .swiper-pagination-bullet-active {
  background: #E6F0F8 !important;
  border-radius: 10px !important;
  border-width: 2px;
  border-color: #446AF2 !important;
}

.carousel-container .swiperbody{
  overflow: visible !important;
  position: relative !important;
}

.carousel-container .swiper-pagination {
  position: absolute !important;
}

/* Adding margin-top to the pagination container */


@keyframes slide-in-from-left {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-out-to-right {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes slide-in-from-right {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-out-to-left {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

.slide-in-from-left {
  animation: slide-in-from-left 1s forwards;
}

.slide-out-to-right {
  animation: slide-out-to-right 1s forwards;
}

.slide-in-from-right {
  animation: slide-in-from-right 1s forwards;
}

.slide-out-to-left {
  animation: slide-out-to-left 1s forwards;
}


/* Add to your CSS file */
.button-fade {
  transition: opacity 1s ease;
}

.button-hidden {
  opacity: 0;
  visibility: hidden; /* Use visibility to ensure the button doesn't block clicks when invisible */
}

.button-visible {
  opacity: 1;
  visibility: visible;
}


::-webkit-scrollbar {
  display: none;
}



@keyframes slideIn {
  from {
      transform: translateX(-100%);
  }
  to {
      transform: translateX(0);
  }
}

.animate-slideIn {
  animation: slideIn 0.7s forwards;
}


/* Arsi section */


@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeInUp {
  animation-name: fadeInUp;
  animation-duration: 3s;
  animation-fill-mode: both;
}

/* Utility for animation delay, repeat this pattern for as many delays as you need */
.delay-200ms {
  animation-delay: 200ms;
}
.delay-400ms {
  animation-delay: 400ms;
}

.split-bg-vertically{
  background-image: linear-gradient(to bottom, #E6F0F8 40%, #E6F0F8 40%, #ffffff 40%, #ffffff 70%);
  }



.popup{
  transition: all;
  animation-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}